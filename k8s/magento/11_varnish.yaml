apiVersion: v1
kind: Service
metadata:
  labels:
    app: varnish
    k8s-app: magento
  name: varnish
  namespace: magento
spec:
  ports:
  - name: http
    port: 80
    protocol: TCP
    targetPort: 80
  - name: proxy
    port: 6091
    protocol: TCP
    targetPort: 6091
  selector:
    app: varnish
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: varnish
  namespace: magento
spec:
  replicas: 1
  selector:
    matchLabels:
      app: varnish
  template:
    metadata:
      labels:
        app: varnish
        k8s-app: magento
    spec:
      tolerations:
      - key: "application"
        operator: "Equal"
        value: "general"
        effect: "NoSchedule"
      containers:
      - args:
        - -c
        - |
          varnishd -a :80 -a :6091 -f /etc/varnish/default.vcl -s default,512M;
          varnishncsa -F '%h %l %u %t "%r" %s %b "%{Referer}i" "%{User-agent}i" %{Varnish:handling}x'
        command:
        - /bin/sh
        env:
        - name: VARNISH_BACKEND_HOST
          value: web
        - name: VARNISH_BACKEND_PORT
          value: "80"
        image: varnish:6.2
        name: varnish
        ports:
        - containerPort: 80
        - containerPort: 6091
        resources:
          requests:
            cpu: 50m
            memory: 512Mi
        volumeMounts:
        - mountPath: /etc/varnish/default.vcl
          name: config
          subPath: default.vcl
      restartPolicy: Always
      volumes:
      - configMap:
          name: varnish-config-data
        name: config
